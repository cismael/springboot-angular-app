# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Namespace
namespace: springboot-angular-app

# ReplicaCount
replicaCount: 1

image:
  repository: hub.docker.com

### Ingress
ingress:
  domainName: cismael.com
#  domainName: localhost
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health # param√®tre de la ligne de vie ALB @see https://kubernetes-sigs.github.io/aws-load-balancer-controller/guide/ingress/annotations/#health-check

### Values for frontend app
frontend:
  name: "frontend"
  image:
    pullPolicy: IfNotPresent

    # Resources
    resources:
      requests:
        cpu: "0.01"
        memory: "128Mi"
      limits:
        cpu: "0.01"
        memory: "128Mi"

  # Security Context at pod level
#  podSecurityContext:
#    runAsNonRoot: true
#    runAsUser: 1000
#    runAsGroup: 3000
#    fsGroup: 2000
#    fsGroupChangePolicy: "OnRootMismatch"
#
#  # Security Context at container level
#  securityContext:
#    privileged: true
#    allowPrivilegeEscalation: true
#    readOnlyRootFilesystem: false
#    capabilities:
#      drop:
#        - all

  # Liveness Probe
  livenessProbe:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 10
    timeoutSeconds: 2
    periodSeconds: 30

  # Readiness Probe
  readinessProbe:
    httpGet:
      path: /
      port: 80
      scheme: HTTP
    initialDelaySeconds: 10
    timeoutSeconds: 2
    periodSeconds: 30

  ### Service
  service:
    type: LoadBalancer #NodePort
    port: 80

### Values for backend app
backend:
  name: "backend"
  image:
    pullPolicy: IfNotPresent

    # Resources
    resources:
      requests:
        cpu: "0.1"
        memory: "128Mi"
      limits:
        cpu: "0.1"
        memory: "128Mi"

  # Security Context at pod level
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
    fsGroupChangePolicy: "OnRootMismatch"

  # Security Context at container level
  securityContext:
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - all

  # Liveness Probe
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 45

  # Readiness Probe
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8081
      scheme: HTTP
    initialDelaySeconds: 60
    timeoutSeconds: 3
    periodSeconds: 45

  ### Service
  service:
    type: LoadBalancer #NodePort
    port: 8081
